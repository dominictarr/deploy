#!/usr/bin/env bash

# when ever this script is called on a git post-recieve hook,
# idempotently clone the pushed branch or tag to heads/$project/$branch

# when a server crashes, if it's running on $branch
# check if there is a "$branch"_stable version. and run that instead.
# this will allow for rollbacks.

# if there is no "$branch"_stable just run from $branch

# what if an app crashes while the dir is being setup?
# hmm, it will probably just crash again, and that find the stable tag.







#tidy up this mess...

checkout () {
  branch=$1

  GIT_DIR=`pwd`
  heads=$GIT_DIR/..
  branch_dir=$GIT_DIR/../$branch
  echo updating $branch_dir
  if [ -e $branch_dir ]; then
    echo GIT FETCH
    cd $branch_dir
    git --git-dir="$GIT_DIR" --work-tree=. checkout $branch --force
  else
    echo GIT CLONE
    cd ..
    mkdir $branch
    cd $branch

    GIT_WORK_TREE=`pwd`
    git --work-tree=. init
    git --git-dir="$GIT_DIR" --work-tree=. checkout $branch --force
    ls $branch
  fi
  echo 'RESTART:' $heads/$branch
}

while read -a line; do
  obj=${line[2]}
  from=${line[0]}
  to=${line[1]}
  case "$obj" in
    refs/heads/* )
      branch=${obj##refs/heads/}
      echo BRANCH '"'$branch'"' $from $to
      ;;
    refs/tags/* )
      branch=${obj##refs/tags/}
      echo TAG $branch $from $to
      ;;
  esac
  checkout $branch
done
